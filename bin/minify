#!/bin/bash

`[ $# -gt 0 -a "$1" == "--js" ] || [ $# -le 0 ]` && js_only=true || js_only=false
`[ $# -gt 0 -a "$1" == "--css" ] || [ $# -le 0 ]` && css_only=true || css_only=false

js_minifier=compiler.jar

css_minifier="yuicompressor.jar"

function doJsMinify() {
    out=$1; shift
    args=""
    for l in $@; do
        args="--js=$l "$args
    done
    [ -f $out ] && rm -rf $out
    java -jar $js_minifier $args --js_output_file=$out
}

function doCssMinify() {
    # TODO: if not worth minifying, then just copy over
    out=$1; shift
    [ -f $out ] && rm -rf $out
    java -jar $css_minifier --verbose --type css -o $out $@
}

function minifyAll() {
    min_type=$1; shift # css or js
    [ $min_type == "js" ] && call="doJsMinify" || call="doCssMinify"
    src_dir=$1; shift
    bin_dir=$1; shift
    exclusion_list=$@
    echo "- Minifying all '${min_type}' files in $src_dir"
    for c in `ls -1 ${src_dir}/*.${min_type}`; do
        skip=false
        for e in ${exclusion_list}; do
            [ `basename $c` == "hg_journals.js" ] && {
                echo "Excluding: $e"
                skip=true
                continue
            }
        done
        $skip && continue
        minified=${bin_dir}/`basename ${c}`
        [ -f ${minified} ] && rm -rf ${minified}
        ${call} ${minified} ${c}
    done
}

if $js_only; then
    ## First, we create the libs js
    #doJsMinify $js_bin_dir/hg_libs.js \
    #           $js_src_dir/libtabs.js $js_src_dir/libhttprequest.js $js_src_dir/libgoogledata.js \
    #           $js_src_dir/libpicasaweb.js $js_src_dir/libslideshow.js 

    minifyAll "js" "../js/uncompiled" "../js" "hg_journals.js"
    minifyAll "js" "../shaving/js/uncompiled" "../shaving/js"
    #minifyAll "js" "../tea/js/uncompiled" "../tea/js"
fi

if $css_only; then
    minifyAll "css" "../css/uncompiled" "../css"
    minifyAll "css" "../shaving/css/uncompiled" "../shaving/css"
    #minifyAll "css" "../tea/css/uncompiled" "../tea/css"
fi
